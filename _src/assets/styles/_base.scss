* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-size: inherit;
}

html {
  font-size: $base-rem-size;
}

body {
  font-family: $base-font-family;
  color: $base-text-color;
  line-height: $base-line-height;
  font-size: $base-font-size;
  min-height: 100vh;
}

h1, h2, h3, h4, h5, h6, p, blockquote, ul, ol, submit {
  box-sizing: content-box;
}

h1, h2, h3, h4, h5, h6, p, blockquote, ul, ol {
  margin-bottom: $content-padding-xs;
}

h1, h2, h3, h4, h5, h6 {
  font-weight: bold;
}

h1 {
  font-size: $h1-size;
  line-height: $h1-line-height;
}

h2 {
  font-size: $h2-size;
  line-height: $h2-line-height;
}

h3 {
  font-size: $h3-size;
  line-height: $h3-line-height;
}

blockquote,
h4 {
  font-size: $h4-size;
  line-height: $h4-line-height;
}

h5 {
  font-size: $h5-size;
  line-height: $h5-line-height;
}

h6 {
  font-size: $h6-size;
  line-height: $h6-line-height;
}

blockquote {
  font-style: italic;
  border-left: solid $content-padding-md $secondary-3;
  padding-left: $content-padding-xs;
}

ul ul,
ol ol {
  margin-bottom: 0;
}

a {
  color: $link-color;
  text-decoration: none;

  &:not(.dots):hover {
    color: $link-color-hover;
    text-decoration: underline;
  }

  &:hover:not(.disabled) svg.icon {
    color: $link-color-hover;
  }
}

svg.icon {
  color: $icon-color;
  fill: currentColor;
  width: $icon-size;
  height: $icon-size;
  padding: 0;

  &:hover {
    color: $icon-color-hover;
  }
}

svg,
img {
  max-width: 100%;
  height: auto;
}

.section {
  @include paddingQueryScreenAll();
}

.hide {
  display: none;
}

.screen-reader-text,
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

.small {
  font-size: 90%;
}

.through {
  text-decoration: line-through;
  opacity: 0.7;
}

.full-width .content-container {
    max-width: none;
}

.content-container {
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
}

.align-center {
  text-align: center;
}

.padded {
  @include paddingQueryScreenAll();
}

.padding-bottom {
  @include paddingPosQueryScreen('bottom');
}

.no-padding {
  padding: 0;
}

.no-padding-bottom {
  padding-bottom: 0 !important;
}

.svg-icon-lib {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
}

.opac-transiton {
  @include overlay(0, -999);
}

.opac-show {
  overflow: hidden;
  position: relative;

  &::before {
    z-index: 5;
    opacity: 0.4;
  }
}

.box-shadow {
  box-shadow: $box-shadow;
}

@media screen and (min-width: $screen-md + 1) {
  .no-padding {
    padding: 0 $content-padding-sm $content-padding-md;
  }
}

@media screen and (min-width: $screen-lg) {
  .no-padding {
    padding: 0 $content-padding-sm $content-padding-lg;
  }
}

@-webkit-keyframes rotating {
  from {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}
@keyframes rotating {
  from {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}
